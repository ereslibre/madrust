// MIR for `main`
// source = MirSource { def_id: DefId(0/0:4 ~ mir_example[317d]::main[0]), promoted: Some(promoted[1]) }
// pass_name = CleanFakeReadsAndBorrows
// disambiguator = before

promoted[1] in main: [&str; 1] ={
    let mut _0: [&str; 1];               // return place
    let mut _1: [&str; 1];
    let mut _2: &str;
    let mut _3: &'static str;

    bb0: {                              
        _3 = const "Science needs a review!\n"; // bb0[0]: scope 0 at mir-example.rs:22:18: 22:43
                                         // ty::Const
                                         // + ty: &'static str
                                         // + val: ScalarPair(Ptr(Pointer { alloc_id: AllocId(1), offset: Size { raw: 0 }, tag: () }), Bits { size: 8, bits: 24 })
                                         // mir::Constant
                                         // + span: mir-example.rs:22:18: 22:43
                                         // + ty: &'static str
                                         // + literal: Const { ty: &'static str, val: ScalarPair(Ptr(Pointer { alloc_id: AllocId(1), offset: Size { raw: 0 }, tag: () }), Bits { size: 8, bits: 24 }) }
        _2 = &(*_3);                     // bb0[1]: scope 0 at mir-example.rs:22:18: 22:43
        _1 = [move _2];                  // bb0[2]: scope 0 at mir-example.rs:22:18: 22:43
        _0 = move _1;                    // bb0[3]: scope 0 at mir-example.rs:22:18: 22:43
        return;                          // bb0[4]: scope 0 at mir-example.rs:22:18: 22:43
    }

    bb1: {                               // cleanup
        resume;                          // bb1[0]: scope 0 at mir-example.rs:22:18: 22:43
    }
}
