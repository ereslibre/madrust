// MIR for `compare`
// source = MirSource { def_id: DefId(0/0:3 ~ mir_example[317d]::compare[0]), promoted: None }
// pass_name = Deaggregator
// disambiguator = after

fn compare(_1: u32, _2: u32) -> ComparisonResult{
    let mut _0: ComparisonResult;        // return place
    let mut _3: bool;
    let mut _4: u32;
    let mut _5: u32;
    let mut _6: bool;
    let mut _7: u32;
    let mut _8: u32;

    bb0: {                              
        StorageLive(_3);                 // bb0[0]: scope 0 at mir-example.rs:9:6: 9:11
        StorageLive(_4);                 // bb0[1]: scope 0 at mir-example.rs:9:6: 9:7
        _4 = _1;                         // bb0[2]: scope 0 at mir-example.rs:9:6: 9:7
        StorageLive(_5);                 // bb0[3]: scope 0 at mir-example.rs:9:10: 9:11
        _5 = _2;                         // bb0[4]: scope 0 at mir-example.rs:9:10: 9:11
        _3 = Lt(move _4, move _5);       // bb0[5]: scope 0 at mir-example.rs:9:6: 9:11
        StorageDead(_5);                 // bb0[6]: scope 0 at mir-example.rs:9:10: 9:11
        StorageDead(_4);                 // bb0[7]: scope 0 at mir-example.rs:9:10: 9:11
        switchInt(move _3) -> [false: bb2, otherwise: bb1]; // bb0[8]: scope 0 at mir-example.rs:9:3: 15:4
    }

    bb1: {                              
        discriminant(_0) = 0;            // bb1[0]: scope 0 at mir-example.rs:10:5: 10:30
        goto -> bb6;                     // bb1[1]: scope 0 at mir-example.rs:9:3: 15:4
    }

    bb2: {                              
        StorageLive(_6);                 // bb2[0]: scope 0 at mir-example.rs:11:13: 11:19
        StorageLive(_7);                 // bb2[1]: scope 0 at mir-example.rs:11:13: 11:14
        _7 = _1;                         // bb2[2]: scope 0 at mir-example.rs:11:13: 11:14
        StorageLive(_8);                 // bb2[3]: scope 0 at mir-example.rs:11:18: 11:19
        _8 = _2;                         // bb2[4]: scope 0 at mir-example.rs:11:18: 11:19
        _6 = Eq(move _7, move _8);       // bb2[5]: scope 0 at mir-example.rs:11:13: 11:19
        StorageDead(_8);                 // bb2[6]: scope 0 at mir-example.rs:11:18: 11:19
        StorageDead(_7);                 // bb2[7]: scope 0 at mir-example.rs:11:18: 11:19
        switchInt(move _6) -> [false: bb4, otherwise: bb3]; // bb2[8]: scope 0 at mir-example.rs:11:10: 15:4
    }

    bb3: {                              
        discriminant(_0) = 1;            // bb3[0]: scope 0 at mir-example.rs:12:5: 12:28
        goto -> bb5;                     // bb3[1]: scope 0 at mir-example.rs:11:10: 15:4
    }

    bb4: {                              
        discriminant(_0) = 2;            // bb4[0]: scope 0 at mir-example.rs:14:5: 14:29
        goto -> bb5;                     // bb4[1]: scope 0 at mir-example.rs:11:10: 15:4
    }

    bb5: {                              
        StorageDead(_6);                 // bb5[0]: scope 0 at mir-example.rs:15:3: 15:4
        goto -> bb6;                     // bb5[1]: scope 0 at mir-example.rs:9:3: 15:4
    }

    bb6: {                              
        StorageDead(_3);                 // bb6[0]: scope 0 at mir-example.rs:15:3: 15:4
        return;                          // bb6[1]: scope 0 at mir-example.rs:16:2: 16:2
    }

    bb7: {                               // cleanup
        resume;                          // bb7[0]: scope 0 at mir-example.rs:8:1: 16:2
    }
}
